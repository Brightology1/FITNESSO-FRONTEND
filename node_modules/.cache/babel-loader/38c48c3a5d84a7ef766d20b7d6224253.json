{"ast":null,"code":"import { config } from \"./baseUrl\";\nimport axios from \"axios\";\n\nconst loginUser = async (event, formData, buttonState, setAlertBox) => {\n  event.preventDefault();\n  buttonState(true);\n  handleSingleSignOn(formData);\n  const url = config.baseURL + \"/login\";\n\n  try {\n    const apiResponse = await axios.post(url, formData);\n    const {\n      data\n    } = apiResponse;\n    setAlertBox({\n      state: true,\n      message: \"Logged in successfully\",\n      type: \"success\"\n    });\n    localStorage.setItem(\"token\", data.token);\n  } catch (e) {\n    const status = await e.response.status;\n\n    if (status >= 400 && status !== undefined) {\n      setAlertBox({\n        state: true,\n        message: \"Incorrect username or password\",\n        type: \"error\"\n      });\n    }\n\n    buttonState(\"\");\n  }\n};\n\nconst handleSingleSignOn = formData => {\n  const {\n    rememberMe,\n    email\n  } = formData;\n\n  if (formData.rememberMe) {\n    localStorage.setItem(\"rememberMe\", JSON.stringify({\n      email,\n      rememberMe\n    }));\n  } else {\n    if (localStorage.getItem(\"rememberMe\")) {\n      localStorage.removeItem(\"rememberMe\");\n    }\n  }\n};\n\nexport { loginUser };","map":{"version":3,"sources":["/Users/decagon/Desktop/Frontend Workshops/Fitnesso-Fitness-App-Frontend/src/components/services/userAuth.js"],"names":["config","axios","loginUser","event","formData","buttonState","setAlertBox","preventDefault","handleSingleSignOn","url","baseURL","apiResponse","post","data","state","message","type","localStorage","setItem","token","e","status","response","undefined","rememberMe","email","JSON","stringify","getItem","removeItem"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GACZ,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,WAAxB,EAAqCC,WAArC,KAAqD;AACtDH,EAAAA,KAAK,CAACI,cAAN;AACAF,EAAAA,WAAW,CAAC,IAAD,CAAX;AACAG,EAAAA,kBAAkB,CAACJ,QAAD,CAAlB;AACA,QAAMK,GAAG,GAAGT,MAAM,CAACU,OAAP,GAAiB,QAA7B;;AACA,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWH,GAAX,EAAgBL,QAAhB,CAA1B;AACA,UAAM;AAAES,MAAAA;AAAF,QAAWF,WAAjB;AACAL,IAAAA,WAAW,CAAC;AACVQ,MAAAA,KAAK,EAAE,IADG;AAEVC,MAAAA,OAAO,EAAE,wBAFC;AAGVC,MAAAA,IAAI,EAAE;AAHI,KAAD,CAAX;AAKAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,KAAnC;AACD,GATD,CASE,OAAOC,CAAP,EAAU;AAEV,UAAMC,MAAM,GAAI,MAAMD,CAAC,CAACE,QAAF,CAAWD,MAAjC;;AACA,QAAIA,MAAM,IAAI,GAAV,IAAiBA,MAAM,KAAKE,SAAhC,EAA2C;AACzCjB,MAAAA,WAAW,CAAC;AACVQ,QAAAA,KAAK,EAAE,IADG;AAEVC,QAAAA,OAAO,EAAE,gCAFC;AAGVC,QAAAA,IAAI,EAAE;AAHI,OAAD,CAAX;AAKD;;AACDX,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,CA3BD;;AA6BA,MAAMG,kBAAkB,GAAIJ,QAAD,IAAc;AACrC,QAAM;AAAEoB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAwBrB,QAA9B;;AACA,MAAIA,QAAQ,CAACoB,UAAb,EAAyB;AACvBP,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCQ,IAAI,CAACC,SAAL,CAAe;AAAEF,MAAAA,KAAF;AAASD,MAAAA;AAAT,KAAf,CAAnC;AACD,GAFD,MAEO;AACL,QAAIP,YAAY,CAACW,OAAb,CAAqB,YAArB,CAAJ,EAAwC;AACtCX,MAAAA,YAAY,CAACY,UAAb,CAAwB,YAAxB;AACD;AACF;AACJ,CATD;;AAWA,SAAS3B,SAAT","sourcesContent":["import { config } from \"./baseUrl\";\nimport axios from \"axios\";\n\n\nconst loginUser\n = async (event, formData, buttonState, setAlertBox) => {\n  event.preventDefault();\n  buttonState(true);\n  handleSingleSignOn(formData);\n  const url = config.baseURL + \"/login\";\n  try {\n    const apiResponse = await axios.post(url, formData);\n    const { data } = apiResponse;\n    setAlertBox({\n      state: true,\n      message: \"Logged in successfully\",\n      type: \"success\",\n    });\n    localStorage.setItem(\"token\", data.token);\n  } catch (e) {\n\n    const status  = await e.response.status;\n    if (status >= 400 && status !== undefined) {\n      setAlertBox({\n        state: true,\n        message: \"Incorrect username or password\",\n        type: \"error\",\n      });\n    }\n    buttonState(\"\");\n  }\n};\n\nconst handleSingleSignOn = (formData) => {\n    const { rememberMe, email } = formData;\n    if (formData.rememberMe) {\n      localStorage.setItem(\"rememberMe\", JSON.stringify({ email, rememberMe }));\n    } else {\n      if (localStorage.getItem(\"rememberMe\")) {\n        localStorage.removeItem(\"rememberMe\");\n      }\n    }\n};\n\nexport { loginUser\n };"]},"metadata":{},"sourceType":"module"}